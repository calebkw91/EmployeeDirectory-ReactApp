{"version":3,"sources":["components/EmployeeRow.jsx","components/FilterForm.jsx","components/EmployeeTable.jsx","App.jsx","index.jsx"],"names":["EmployeeRow","props","firstName","lastName","title","FilterForm","Form","Group","controlId","Label","htmlFor","Control","onChange","handleFilterChange","value","name","type","className","placeholder","id","as","selectValue","handleSelect","aria-label","selected","EmployeeTable","state","filter","firstSort","lastSort","titleSort","employees","firstNameHeader","lastNameHeader","titleHeader","handleFirstNameSort","newSort","unsorted","sort","a","b","toUpperCase","setState","handleLastNameSort","handleTitleSort","filterEmployees","filterCategory","filtered","filterCat","length","e","substring","toLowerCase","handleInputChange","event","target","scope","onClick","this","map","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6dc16042.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction EmployeeRow(props) {\n    return <tr>\n                <td>{props.firstName}</td>\n                <td>{props.lastName}</td>\n                <td>{props.title}</td>\n            </tr>\n}\n\nexport default EmployeeRow;","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nfunction FilterForm(props) {\n    return (\n        <Form>\n            <Form.Group controlId=\"filterForm.FilterInput\">\n                <Form.Label htmlFor=\"filter\">Search:</Form.Label>\n                <Form.Control\n                    onChange={props.handleFilterChange}\n                    value={props.value}\n                    name=\"search\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Filter\"\n                    id=\"Filter\"\n                />\n            </Form.Group>\n            <Form.Group controlId=\"filterForm.FilterSelect\">\n                <Form.Control as=\"select\" className=\"form-select\" value={props.selectValue} onChange={props.handleSelect} aria-label=\"Default select example\">\n                    <option selected>Filter by: </option>\n                    <option value=\"firstName\">First Name</option>\n                    <option value=\"lastName\">Last Name</option>\n                    <option value=\"title\">Title</option>\n                </Form.Control>\n            </Form.Group>\n        </Form>\n    );\n}\n\nexport default FilterForm;","import React from \"react\";\nimport EmployeeRow from \"./EmployeeRow\";\nimport employees from \"../employees.json\";\nimport FilterForm from \"./FilterForm\";\n\nclass EmployeeTable extends React.Component {\n    state = {\n        filter: \"\",\n        selectValue: \"Select a Value\",\n        firstSort: 0,\n        lastSort: 0,\n        titleSort: 0,\n        employees: employees,\n        firstNameHeader: \"First Name\",\n        lastNameHeader: \"Last Name\",\n        titleHeader: \"Title\"\n    }\n\n    handleFirstNameSort = () => {\n        let newSort = this.state.firstSort + 1;\n        let unsorted = this.state.employees;\n        let firstNameHeader = \"\";\n\n        if(newSort > 2){\n            newSort = 0;\n            firstNameHeader = \"First Name\";\n            unsorted.sort((a, b) => {\n                return a.id - b.id;\n            });\n        }\n\n        if(newSort === 1){\n            firstNameHeader = \"First Name \\u25B2\";\n            unsorted.sort((a, b) => {\n                if(a.firstName.toUpperCase() < b.firstName.toUpperCase()){\n                    return -1;\n                }\n                if(a.firstName.toUpperCase() > b.firstName.toUpperCase()){\n                    return 1;\n                }\n    \n                return 0;\n            });\n        }\n\n        if(newSort === 2){\n            firstNameHeader = \"First Name \\u25BC\";\n            unsorted.sort((a, b) => {\n                if(a.firstName.toUpperCase() < b.firstName.toUpperCase()){\n                    return 1;\n                }\n                if(a.firstName.toUpperCase() > b.firstName.toUpperCase()){\n                    return -1;\n                }\n    \n                return 0;\n            });\n        }\n\n        this.setState({\n            employees: unsorted,\n            firstSort: newSort,\n            lastSort: 0,\n            titleSort: 0,\n            firstNameHeader: firstNameHeader,\n            lastNameHeader: \"Last Name\",\n            titleHeader: \"Title\"\n        });\n    }\n\n    handleLastNameSort = () => {\n        let newSort = this.state.lastSort + 1;\n        let unsorted = this.state.employees;\n        let lastNameHeader = \"\";\n\n        if(newSort > 2){\n            newSort = 0;\n            lastNameHeader = \"Last Name\";\n            unsorted.sort((a, b) => {\n                return a.id - b.id;\n            });\n        }\n\n        if(newSort === 1){\n            lastNameHeader = \"Last Name \\u25B2\";\n            unsorted.sort((a, b) => {\n                if(a.lastName.toUpperCase() < b.lastName.toUpperCase()){\n                    return -1;\n                }\n                if(a.lastName.toUpperCase() > b.lastName.toUpperCase()){\n                    return 1;\n                }\n    \n                return 0;\n            });\n        }\n\n        if(newSort === 2){\n            lastNameHeader = \"Last Name \\u25BC\";\n            unsorted.sort((a, b) => {\n                if(a.lastName.toUpperCase() < b.lastName.toUpperCase()){\n                    return 1;\n                }\n                if(a.lastName.toUpperCase() > b.lastName.toUpperCase()){\n                    return -1;\n                }\n    \n                return 0;\n            });\n        }\n\n        this.setState({\n            employees: unsorted,\n            firstSort: 0,\n            lastSort: newSort,\n            titleSort: 0,\n            firstNameHeader: \"First Name\",\n            lastNameHeader: lastNameHeader,\n            titleHeader: \"Title\"\n        });\n    }\n\n    handleTitleSort = () => {\n        let newSort = this.state.titleSort + 1;\n        let unsorted = this.state.employees;\n        let titleHeader = \"\";\n\n        if(newSort > 2){\n            newSort = 0;\n            titleHeader = \"Title\";\n            unsorted.sort((a, b) => {\n                return a.id - b.id;\n            });\n        }\n\n        if(newSort === 1){\n            titleHeader = \"Title \\u25B2\";\n            unsorted.sort((a, b) => {\n                if(a.title.toUpperCase() < b.title.toUpperCase()){\n                    return -1;\n                }\n                if(a.title.toUpperCase() > b.title.toUpperCase()){\n                    return 1;\n                }\n    \n                return 0;\n            });\n        }\n\n        if(newSort === 2){\n            titleHeader = \"Title \\u25BC\";\n            unsorted.sort((a, b) => {\n                if(a.title.toUpperCase() < b.title.toUpperCase()){\n                    return 1;\n                }\n                if(a.title.toUpperCase() > b.title.toUpperCase()){\n                    return -1;\n                }\n    \n                return 0;\n            });\n        }\n\n        this.setState({\n            employees: unsorted,\n            firstSort: 0,\n            lastSort: 0,\n            titleSort: newSort,\n            firstNameHeader: \"First Name\",\n            lastNameHeader: \"Last Name\",\n            titleHeader: titleHeader\n        });\n    }\n\n    filterEmployees = (filter, filterCategory) => {\n        let filterCat = filterCategory;\n        let filtered;\n\n        if(filter.length < 1){\n            this.setState({ employees: employees });\n        }\n\n        if(filterCat === null){\n            filterCat = \"firstName\";\n        }\n\n        if(filterCat === \"firstName\"){\n            filtered = employees.filter(e => {\n                let name = e.firstName.substring(0,filter.length);\n                return name.toLowerCase() === filter.toLowerCase()\n            });\n        }\n        else if(filterCat === \"lastName\"){\n            filtered = employees.filter(e => {\n                let name = e.lastName.substring(0,filter.length);\n                return name.toLowerCase() === filter.toLowerCase()\n            });\n        }\n        else if(filterCat === \"title\"){\n            filtered = employees.filter(e => {\n                let name = e.title.substring(0,filter.length);\n                return name.toLowerCase() === filter.toLowerCase()\n            });\n        }\n\n        if(filter.length < 2){\n            this.setState({ employees: employees });\n        }\n        else{\n            this.setState({ employees: filtered });\n        }\n    }\n\n    handleInputChange = (event) => {\n        const filter = event.target.value;\n        this.setState({filter: filter});\n        this.filterEmployees(this.state.filter, this.state.selectValue);\n    }\n\n    handleSelect = (event) => {\n        this.setState({ selectValue: event.target.value });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8\">\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\" onClick={this.handleFirstNameSort}>\n                                        {this.state.firstNameHeader}\n                                    </th>\n                                    <th scope=\"col\" onClick={this.handleLastNameSort}>\n                                        {this.state.lastNameHeader}\n                                    </th>\n                                    <th scope=\"col\" onClick={this.handleTitleSort}>\n                                        {this.state.titleHeader}\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.employees.map(e => \n                                    <EmployeeRow \n                                        key={e.id}\n                                        id={e.id}\n                                        firstName={e.firstName}\n                                        lastName={e.lastName}\n                                        title={e.title}\n                                    />)}\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <FilterForm\n                            value={this.state.filter}\n                            handleFilterChange={this.handleInputChange}\n                            selectValue={this.state.selectValue}\n                            handleSelect={this.handleSelect}\n                        />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default EmployeeTable;","import React from \"react\";\nimport EmployeeTable from \"./components/EmployeeTable\";\n\nfunction App() {\n  return (\n    <EmployeeTable/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}